diff --git a/data/locale/english.locale b/data/locale/english.locale
index f5353e2..5c4d11b 100644
--- a/data/locale/english.locale
+++ b/data/locale/english.locale
@@ -290,7 +290,7 @@ clock_switch_on Clock on
 color.gradient Color gradient
 color.gradient_a2b color A to B
 color.gradient_b2a color B to A
-color.gradient_d2l dark nach light
+color.gradient_d2l dark to light
 color.gradient_dld dark light dark
 color.gradient_l2d light to dark
 color.gradient_ldl light dark light
diff --git a/src/gui/audiomute.cpp b/src/gui/audiomute.cpp
index b5f3923..540f4a7 100644
--- a/src/gui/audiomute.cpp
+++ b/src/gui/audiomute.cpp
@@ -77,30 +77,28 @@ void CAudioMute::AudioMute(int newValue, bool isEvent)
 			frameBuffer->setFbArea(CFrameBuffer::FB_PAINTAREA_MUTEICON1);
 			y_old = y;
 		}
-		if ((g_settings.mode_clock) && (doInit))
+		if ((g_settings.mode_clock) && (doInit)){
+			CInfoClock::getInstance()->disableInfoClock();
 			CInfoClock::getInstance()->ClearDisplay();
+		}
 
 		frameBuffer->fbNoCheck(true);
 		if (newValue) {
-			if (do_paint_mute_icon){
+			if (do_paint_mute_icon)
 				this->paint();
-				if (!CInfoClock::getInstance()->isBlocked()) //paint clock before it's running but if no blocked, this avoids delay
-					CInfoClock::getInstance()->paint();
-			}
 			frameBuffer->setFbArea(CFrameBuffer::FB_PAINTAREA_MUTEICON1, x, y, width, height);
 		}
 		else {
-			if (do_paint_mute_icon){
+			if (do_paint_mute_icon)
 				this->hide();
-				if ((g_settings.mode_clock) && (doInit)){
-					if (!CInfoClock::getInstance()->isBlocked()) //paint clock before it's running but if no blocked, this avoids delay
-						CInfoClock::getInstance()->paint();
-					CInfoClock::getInstance()->enableInfoClock(!CInfoClock::getInstance()->isBlocked());
-				}
-			}
 			frameBuffer->setFbArea(CFrameBuffer::FB_PAINTAREA_MUTEICON1);
 		}
 		frameBuffer->fbNoCheck(false);
+
+		if (doInit){
+			if (CInfoClock::getInstance()->enableInfoClock())
+				CInfoClock::getInstance()->paint();// avoid delay
+		}
 	}
 }
 
diff --git a/src/gui/channellist.cpp b/src/gui/channellist.cpp
index 241c714..6d1ce22 100644
--- a/src/gui/channellist.cpp
+++ b/src/gui/channellist.cpp
@@ -963,8 +963,11 @@ void CChannelList::hide()
 	}
 
 	header->kill();
-	if (CChannelLogo)
+	if (CChannelLogo){
 		CChannelLogo->kill();
+		delete CChannelLogo;
+		CChannelLogo = NULL;
+	}
 
 	frameBuffer->paintBackgroundBoxRel(x, y, full_width, height + info_height);
 	clearItem2DetailsLine();
diff --git a/src/gui/components/cc_frm_clock.cpp b/src/gui/components/cc_frm_clock.cpp
index 69e45cf..eaefa43 100644
--- a/src/gui/components/cc_frm_clock.cpp
+++ b/src/gui/components/cc_frm_clock.cpp
@@ -172,7 +172,12 @@ void CComponentsFrmClock::initCCLockItems()
 	/* create label objects and add to container, ensure that count of items = count of chars (one char = one segment)
 	 * this is required for the case, if any time string format was changed
 	*/
-	if (v_cc_items.size() != s_time.size()){
+	if (v_cc_items.empty() || (v_cc_items.size() != s_time.size())){
+		//exit on empty time string
+		if (s_time.empty()){
+			clear();
+			return;
+		}
 
 		//clean up possible old items before add new items
 		clear();
diff --git a/src/gui/components/cc_item_progressbar.cpp b/src/gui/components/cc_item_progressbar.cpp
index 3abefb1..e0e1afb 100644
--- a/src/gui/components/cc_item_progressbar.cpp
+++ b/src/gui/components/cc_item_progressbar.cpp
@@ -172,13 +172,13 @@ class CProgressBarCache
 						yoff(0)
 		{
 			if (pbCache.size() > 10)
-				clear();
+				pbcClear();
 			pbcCreateBitmaps();
 		}
-		void clear();
+		void pbcClear();
 	public:
 		void pbcPaint(int x, int y, int pbc_active_width, int pbc_passive_width);
-		static CProgressBarCache *lookup(	int dy,
+		static CProgressBarCache *pbcLookup(	int dy,
 							int dx,
 							int active_col,
 							int passive_col,
@@ -190,7 +190,7 @@ class CProgressBarCache
 							int Y);
 };
 
-void CProgressBarCache::clear()
+void CProgressBarCache::pbcClear()
 {
 	for (std::vector<CProgressBarCache *>::iterator it = pbCache.begin(); it != pbCache.end(); ++it) {
 		if ((*it)->pbc_active)
@@ -201,7 +201,7 @@ void CProgressBarCache::clear()
 	pbCache.clear();
 }
 
-CProgressBarCache *CProgressBarCache::lookup(int dy, int dx, int active_col, int passive_col, int design, bool enable_invert, bool enable_gradient, int R, int G, int Y)
+CProgressBarCache *CProgressBarCache::pbcLookup(int dy, int dx, int active_col, int passive_col, int design, bool enable_invert, bool enable_gradient, int R, int G, int Y)
 {
 	// sanitize
 	if (design == CProgressBar::PB_MONO)
@@ -465,7 +465,7 @@ void CProgressBar::paintProgress(bool do_save_bg)
 
 	if (cc_allow_paint){
 		if (pb_active_width != pb_last_width) {
-			CProgressBarCache *pbc = CProgressBarCache::lookup(pb_height, pb_max_width, pb_active_col, pb_passive_col, *pb_design, pb_invert, *pb_gradient, pb_red, pb_yellow, pb_green);
+			CProgressBarCache *pbc = CProgressBarCache::pbcLookup(pb_height, pb_max_width, pb_active_col, pb_passive_col, *pb_design, pb_invert, *pb_gradient, pb_red, pb_yellow, pb_green);
 			if (pbc)
 				pbc->pbcPaint(pb_x, pb_y, pb_active_width, pb_passive_width);
 			is_painted = true;
diff --git a/src/gui/components/cc_item_text.h b/src/gui/components/cc_item_text.h
index 27715f4..af36d12 100644
--- a/src/gui/components/cc_item_text.h
+++ b/src/gui/components/cc_item_text.h
@@ -169,8 +169,6 @@ class CComponentsText : public CCTextScreen, public CComponentsItem, public CBox
 		///helper to remove linebreak chars from a string if needed
 		virtual void removeLineBreaks(std::string& str);
 
-		///returns true, if text was changed
-		virtual bool textChanged(){return ct_old_text != ct_text;};
 		///force paint of text even if text was changed or not
 		virtual void forceTextPaint(bool force_text_paint = true){ct_force_text_paint = force_text_paint;};
 
diff --git a/src/gui/infoviewer.cpp b/src/gui/infoviewer.cpp
index d85d6a0..28419a2 100644
--- a/src/gui/infoviewer.cpp
+++ b/src/gui/infoviewer.cpp
@@ -149,7 +149,7 @@ void CInfoViewer::Init()
 	/* after font size changes, Init() might be called multiple times */
 	changePB();
 
-	casysChange = g_settings.casystem_display;
+	casysChange = g_settings.infobar_casystem_display;
 	channellogoChange = g_settings.infobar_show_channellogo;
 
 	current_channel_id = CZapit::getInstance()->GetCurrentChannelID();;
@@ -421,7 +421,7 @@ void CInfoViewer::paintHead()
 
 void CInfoViewer::paintBody()
 {
-	int h_body = InfoHeightY - header_height + (g_settings.casystem_display < 2 ? infoViewerBB->bottom_bar_offset : 0);
+	int h_body = InfoHeightY - header_height + (g_settings.infobar_casystem_display < 2 ? infoViewerBB->bottom_bar_offset : 0);
 	if (body == NULL)
 		body = new CComponentsShapeSquare(ChanInfoX, ChanNameY + header_height, BoxEndX-ChanInfoX, h_body, NULL, CC_SHADOW_RIGHT);
 	else
@@ -628,8 +628,8 @@ void CInfoViewer::reset_allScala()
 
 void CInfoViewer::check_channellogo_ca_SettingsChange()
 {
-	if (casysChange != g_settings.casystem_display || channellogoChange != g_settings.infobar_show_channellogo) {
-		casysChange = g_settings.casystem_display;
+	if (casysChange != g_settings.infobar_casystem_display || channellogoChange != g_settings.infobar_show_channellogo) {
+		casysChange = g_settings.infobar_casystem_display;
 		channellogoChange = g_settings.infobar_show_channellogo;
 		infoViewerBB->initBBOffset();
 		start();
@@ -1873,7 +1873,7 @@ void CInfoViewer::killInfobarText()
 {
 	if (infobar_txt){
 		if (infobar_txt->isPainted())
-			infobar_txt->hide();
+			infobar_txt->kill();
 		delete infobar_txt;
 	}
 	infobar_txt = NULL;
@@ -1909,7 +1909,8 @@ void CInfoViewer::showInfoFile()
 		infobar_txt = new CComponentsInfoBox();
 
 	//get text from file and set it to info object, exit and delete object if failed
-	if (!infobar_txt->setTextFromFile(infobar_file, CTextBox::CENTER, g_Font[SNeutrinoSettings::FONT_TYPE_INFOBAR_INFO])){
+	bool new_text = infobar_txt->setTextFromFile(infobar_file, CTextBox::CENTER, g_Font[SNeutrinoSettings::FONT_TYPE_INFOBAR_INFO]);
+	if (!new_text){
 		killInfobarText();
 		return;
 	}
@@ -1924,7 +1925,7 @@ void CInfoViewer::showInfoFile()
 
 	//paint info, don't save background, if already painted, global hide is also done by killTitle()
 	bool save_bg = !infobar_txt->isPainted();
-	if (infobar_txt->textChanged() || virtual_zap_mode)
+	if (new_text || virtual_zap_mode)
 		infobar_txt->paint(save_bg);
 
 }
diff --git a/src/gui/infoviewer_bb.cpp b/src/gui/infoviewer_bb.cpp
index f01f515..3125000 100644
--- a/src/gui/infoviewer_bb.cpp
+++ b/src/gui/infoviewer_bb.cpp
@@ -177,7 +177,7 @@ void CInfoViewerBB::getBBIconInfo()
 				iconView = checkBBIcon(NEUTRINO_ICON_RESOLUTION_1280, &w, &h);
 			break;
 		case CInfoViewerBB::ICON_CA:
-			if (g_settings.casystem_display == 2)
+			if (g_settings.infobar_casystem_display == 2)
 				iconView = checkBBIcon(NEUTRINO_ICON_SCRAMBLED2, &w, &h);
 			break;
 		case CInfoViewerBB::ICON_TUNER:
@@ -424,7 +424,7 @@ void CInfoViewerBB::paintshowButtonBar()
 	}
 	g_InfoViewer->sec_timer_id = g_RCInput->addTimer(1*1000*1000, false);
 
-	if (g_settings.casystem_display < 2)
+	if (g_settings.infobar_casystem_display < 2)
 		paintCA_bar(0,0);
 
 	paintFoot();
@@ -688,8 +688,8 @@ void CInfoViewerBB::showBarHdd(int percent)
 void CInfoViewerBB::paint_ca_icons(int caid, const char *icon, int &icon_space_offset)
 {
 	char buf[20];
-	int endx = g_InfoViewer->BoxEndX - (g_settings.casystem_frame ? 20 : 10);
-	int py = g_InfoViewer->BoxEndY + (g_settings.casystem_frame ? 4 : 2); /* hand-crafted, should be automatic */
+	int endx = g_InfoViewer->BoxEndX - (g_settings.infobar_casystem_frame ? 20 : 10);
+	int py = g_InfoViewer->BoxEndY + (g_settings.infobar_casystem_frame ? 4 : 2); /* hand-crafted, should be automatic */
 	int px = 0;
 	static map<int, std::pair<int,const char*> > icon_map;
 	const int icon_space = 10, icon_number = 10;
@@ -730,7 +730,7 @@ void CInfoViewerBB::paint_ca_icons(int caid, const char *icon, int &icon_space_o
 	if (icon_offset[icon_map[caid].first] == 0)
 		return;
 
-	if (g_settings.casystem_display == 0) {
+	if (g_settings.infobar_casystem_display == 0) {
 		px = endx - (icon_offset[icon_map[caid].first] - icon_space );
 	} else {
 		icon_space_offset += icon_sizeW[icon_map[caid].first];
@@ -750,10 +750,10 @@ void CInfoViewerBB::paint_ca_icons(int caid, const char *icon, int &icon_space_o
 
 void CInfoViewerBB::showIcon_CA_Status(int notfirst)
 {
-	if (g_settings.casystem_display == 3)
+	if (g_settings.infobar_casystem_display == 3)
 		return;
 	if(NeutrinoMessages::mode_ts == CNeutrinoApp::getInstance()->getMode() && !CMoviePlayerGui::getInstance().timeshift){
-		if (g_settings.casystem_display == 2) {
+		if (g_settings.infobar_casystem_display == 2) {
 			fta = true;
 			showOne_CAIcon();
 		}
@@ -766,11 +766,11 @@ void CInfoViewerBB::showIcon_CA_Status(int notfirst)
 	int icon_space_offset = 0;
 
 	if(!g_InfoViewer->chanready) {
-		if (g_settings.casystem_display == 2) {
+		if (g_settings.infobar_casystem_display == 2) {
 			fta = true;
 			showOne_CAIcon();
 		}
-		else if(g_settings.casystem_display == 0) {
+		else if(g_settings.infobar_casystem_display == 0) {
 			for (int i = 0; i < (int)(sizeof(caids)/sizeof(int)); i++) {
 				paint_ca_icons(caids[i], white, icon_space_offset);
 			}
@@ -782,7 +782,7 @@ void CInfoViewerBB::showIcon_CA_Status(int notfirst)
 	if(!channel)
 		return;
 
-	if (g_settings.casystem_display == 2) {
+	if (g_settings.infobar_casystem_display == 2) {
 		fta = channel->camap.empty();
 		showOne_CAIcon();
 		return;
@@ -791,7 +791,7 @@ void CInfoViewerBB::showIcon_CA_Status(int notfirst)
 	if(!notfirst) {
 #if 0
 		static int icon_space_offset = 0;
-		if ((g_settings.casystem_display == 1) && (icon_space_offset)) {
+		if ((g_settings.infobar_casystem_display == 1) && (icon_space_offset)) {
 			paintCA_bar(0,icon_space_offset);
 			icon_space_offset = 0;
 		}
@@ -805,7 +805,7 @@ void CInfoViewerBB::showIcon_CA_Status(int notfirst)
 				if((found = (caid == caids[i])))
 					break;
 			}
-			if(g_settings.casystem_display == 0)
+			if(g_settings.infobar_casystem_display == 0)
 				paint_ca_icons(caids[i], (found ? yellow : white), icon_space_offset);
 			else if(found)
 				paint_ca_icons(caids[i], yellow, icon_space_offset);
@@ -815,8 +815,8 @@ void CInfoViewerBB::showIcon_CA_Status(int notfirst)
 
 void CInfoViewerBB::paintCA_bar(int left, int right)
 {
-	int xcnt = (g_InfoViewer->BoxEndX - g_InfoViewer->ChanInfoX - (g_settings.casystem_frame ? 24 : 0)) / 4;
-	int ycnt = (bottom_bar_offset - (g_settings.casystem_frame ? 14 : 0)) / 4;
+	int xcnt = (g_InfoViewer->BoxEndX - g_InfoViewer->ChanInfoX - (g_settings.infobar_casystem_frame ? 24 : 0)) / 4;
+	int ycnt = (bottom_bar_offset - (g_settings.infobar_casystem_frame ? 14 : 0)) / 4;
 	int ca_width = g_InfoViewer->BoxEndX - g_InfoViewer->ChanInfoX;
 
 	if (right)
@@ -824,7 +824,7 @@ void CInfoViewerBB::paintCA_bar(int left, int right)
 	if (left)
 		left =  xcnt - ((left/4)-1);
 
-	if (g_settings.casystem_frame) { // with highlighted frame
+	if (g_settings.infobar_casystem_frame) { // with highlighted frame
 		if (!right || !left) { // paint full bar
 			// framed ca bar
 			if (cabar == NULL)
@@ -849,7 +849,7 @@ void CInfoViewerBB::paintCA_bar(int left, int right)
 	else
 		paintBoxRel(g_InfoViewer->ChanInfoX, g_InfoViewer->BoxEndY, ca_width , bottom_bar_offset, COL_INFOBAR_CASYSTEM_PLUS_0);
 #if 1
-	if (!g_settings.casystem_dotmatrix) //don't show dotmatrix
+	if (!g_settings.infobar_casystem_dotmatrix) //don't show dotmatrix
 		return;
 
 	if (left)
@@ -857,7 +857,7 @@ void CInfoViewerBB::paintCA_bar(int left, int right)
 
 	for (int i = 0  + right; i < xcnt - left; i++) {
 		for (int j = 0; j < ycnt; j++) {
-			frameBuffer->paintBoxRel((g_InfoViewer->ChanInfoX + (g_settings.casystem_frame ? 14 : 2)) + i*4, g_InfoViewer->BoxEndY + (g_settings.casystem_frame ? 4 : 2) + j*4, 2, 2, COL_INFOBAR_PLUS_1);
+			frameBuffer->paintBoxRel((g_InfoViewer->ChanInfoX + (g_settings.infobar_casystem_frame ? 14 : 2)) + i*4, g_InfoViewer->BoxEndY + (g_settings.infobar_casystem_frame ? 4 : 2) + j*4, 2, 2, COL_INFOBAR_PLUS_1);
 		}
 	}
 #endif
@@ -900,7 +900,7 @@ void CInfoViewerBB::ResetModules()
 
 void CInfoViewerBB::initBBOffset()
 {
-	bottom_bar_offset = (g_settings.casystem_display < 2) ? (g_settings.casystem_frame ? 36 : 22) : 0;
+	bottom_bar_offset = (g_settings.infobar_casystem_display < 2) ? (g_settings.infobar_casystem_frame ? 36 : 22) : 0;
 }
 
 void* CInfoViewerBB::scrambledThread(void *arg)
diff --git a/src/gui/luainstance.cpp b/src/gui/luainstance.cpp
index aa9ca91..3d6cb7f 100644
--- a/src/gui/luainstance.cpp
+++ b/src/gui/luainstance.cpp
@@ -341,8 +341,8 @@ static void set_lua_variables(lua_State *L)
 	}
 }
 
-//#define DBG printf
-#define DBG(...)
+//#define DBG1 printf
+#define DBG1(...)
 
 #define lua_boxpointer(L, u) \
 	(*(void **)(lua_newuserdata(L, sizeof(void *))) = (u))
@@ -615,7 +615,7 @@ int CLuaInstance::NewWindow(lua_State *L)
 int CLuaInstance::PaintBox(lua_State *L)
 {
 	int count = lua_gettop(L);
-	DBG("CLuaInstance::%s %d\n", __func__, count);
+	DBG1("CLuaInstance::%s %d\n", __func__, count);
 	int x, y, w, h, radius = 0, corner = CORNER_ALL;
 	unsigned int c;
 
@@ -648,7 +648,7 @@ int CLuaInstance::PaintBox(lua_State *L)
 
 int CLuaInstance::PaintIcon(lua_State *L)
 {
-	DBG("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
+	DBG1("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
 	int x, y, h;
 	unsigned int o;
 	const char *fname;
@@ -669,7 +669,7 @@ extern CPictureViewer * g_PicViewer;
 
 int CLuaInstance::DisplayImage(lua_State *L)
 {
-	DBG("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
+	DBG1("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
 	int x, y, w, h;
 	const char *fname;
 
@@ -800,7 +800,7 @@ int CLuaInstance::strSub(lua_State *L)
 
 int CLuaInstance::GetSize(lua_State *L)
 {
-	DBG("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
+	DBG1("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
 	int w = 0, h = 0;
 	const char *fname;
 
@@ -817,7 +817,7 @@ int CLuaInstance::RenderString(lua_State *L)
 	unsigned int c;
 	const char *text;
 	int numargs = lua_gettop(L);
-	DBG("CLuaInstance::%s %d\n", __func__, numargs);
+	DBG1("CLuaInstance::%s %d\n", __func__, numargs);
 	c = COL_MENUCONTENT_TEXT;
 	boxh = 0;
 	center = 0;
@@ -857,7 +857,7 @@ int CLuaInstance::getRenderWidth(lua_State *L)
 {
 	int f;
 	const char *text;
-	DBG("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
+	DBG1("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
 
 	CLuaData *W = CheckData(L, 1);
 	if (!W)
@@ -886,7 +886,7 @@ int CLuaInstance::GetInput(lua_State *L)
 	/* TODO: I'm not sure if this works... */
 	if (msg != CRCInput::RC_timeout && msg > CRCInput::RC_MaxRC)
 	{
-		DBG("CLuaInstance::%s: msg 0x%08" PRIx32 " data 0x%08" PRIx32 "\n", __func__, msg, data);
+		DBG1("CLuaInstance::%s: msg 0x%08" PRIx32 " data 0x%08" PRIx32 "\n", __func__, msg, data);
 		CNeutrinoApp::getInstance()->handleMsg(msg, data);
 	}
 	/* signed int is debatable, but the "big" messages can't yet be handled
@@ -899,7 +899,7 @@ int CLuaInstance::GetInput(lua_State *L)
 int CLuaInstance::FontHeight(lua_State *L)
 {
 	int f;
-	DBG("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
+	DBG1("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
 
 	CLuaData *W = CheckData(L, 1);
 	if (!W)
@@ -913,7 +913,7 @@ int CLuaInstance::FontHeight(lua_State *L)
 
 int CLuaInstance::GCWindow(lua_State *L)
 {
-	DBG("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
+	DBG1("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
 	CLuaData *w = (CLuaData *)lua_unboxpointer(L, 1);
 	delete w->fbwin;
 	w->rcinput = NULL;
@@ -2027,7 +2027,7 @@ int CLuaInstance::CWindowSetCenterPos(lua_State *L)
 
 int CLuaInstance::CWindowDelete(lua_State *L)
 {
-	DBG("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
+	DBG1("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
 	CLuaCWindow *m = CWindowCheck(L, 1);
 	if (!m)
 		return 0;
@@ -2350,7 +2350,7 @@ int CLuaInstance::ComponentsTextEnableUTF8(lua_State *L)
 
 int CLuaInstance::ComponentsTextDelete(lua_State *L)
 {
-	DBG("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
+	DBG1("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
 	CLuaComponentsText *m = ComponentsTextCheck(L, 1);
 	if (!m)
 		return 0;
@@ -2512,7 +2512,7 @@ int CLuaInstance::CPictureSetCenterPos(lua_State *L)
 
 int CLuaInstance::CPictureDelete(lua_State *L)
 {
-	DBG("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
+	DBG1("CLuaInstance::%s %d\n", __func__, lua_gettop(L));
 	CLuaPicture *m = CPictureCheck(L, 1);
 	if (!m) return 0;
 
diff --git a/src/gui/osd_setup.cpp b/src/gui/osd_setup.cpp
index 22e6250..f102365 100644
--- a/src/gui/osd_setup.cpp
+++ b/src/gui/osd_setup.cpp
@@ -826,7 +826,7 @@ void COsdSetup::showOsdMenueColorSetup(CMenuWidget *menu_colors)
 
 	// ca bar
 	menu_colors->addItem( new CMenuSeparator(CMenuSeparator::LINE));
-	mf = new CMenuDForwarder(LOCALE_MISCSETTINGS_INFOBAR_CASYSTEM_DISPLAY, g_settings.casystem_display < 2, NULL, chInfobarCASystem );
+	mf = new CMenuDForwarder(LOCALE_MISCSETTINGS_INFOBAR_CASYSTEM_DISPLAY, g_settings.infobar_casystem_display < 2, NULL, chInfobarCASystem );
 	mf->setHint("", LOCALE_MENU_HINT_INFOBAR_CASYS_COLOR);
 	menu_colors->addItem(mf);
 
@@ -1070,21 +1070,21 @@ void COsdSetup::showOsdInfobarSetup(CMenuWidget *menu_infobar)
 	menu_infobar->addItem(GenericMenuSeparator);
 
 	// CA system
-	mc = new CMenuOptionChooser(LOCALE_MISCSETTINGS_INFOBAR_CASYSTEM_DISPLAY, &g_settings.casystem_display, INFOBAR_CASYSTEM_MODE_OPTIONS, INFOBAR_CASYSTEM_MODE_OPTION_COUNT, true, this);
+	mc = new CMenuOptionChooser(LOCALE_MISCSETTINGS_INFOBAR_CASYSTEM_DISPLAY, &g_settings.infobar_casystem_display, INFOBAR_CASYSTEM_MODE_OPTIONS, INFOBAR_CASYSTEM_MODE_OPTION_COUNT, true, this);
 	mc->OnAfterChangeOption.connect(slot_ibar);
 	mc->setHint("", LOCALE_MENU_HINT_INFOBAR_CASYS);
 	menu_infobar->addItem(mc);
 #if 1
 	// CA system dotmatrix
-	ca_dotmatrix = new CMenuOptionChooser(LOCALE_MISCSETTINGS_INFOBAR_CASYSTEM_DOTMATRIX, &g_settings.casystem_dotmatrix, OPTIONS_OFF0_ON1_OPTIONS, OPTIONS_OFF0_ON1_OPTION_COUNT, g_settings.casystem_display < 2);
-	ca_dotmatrix->setHint("", LOCALE_MENU_HINT_INFOBAR_CASYS_DOTMATRIX);
-	menu_infobar->addItem(ca_dotmatrix);
+	mc = new CMenuOptionChooser(LOCALE_MISCSETTINGS_INFOBAR_CASYSTEM_DOTMATRIX, &g_settings.infobar_casystem_dotmatrix, OPTIONS_OFF0_ON1_OPTIONS, OPTIONS_OFF0_ON1_OPTION_COUNT, g_settings.infobar_casystem_display < 2);
+	mc->setHint("", LOCALE_MENU_HINT_INFOBAR_CASYS_DOTMATRIX);
+	menu_infobar->addItem(mc);
 #endif
 	// CA system frame
-	ca_frame = new CMenuOptionChooser(LOCALE_MISCSETTINGS_INFOBAR_CASYSTEM_FRAME, &g_settings.casystem_frame, OPTIONS_OFF0_ON1_OPTIONS, OPTIONS_OFF0_ON1_OPTION_COUNT, g_settings.casystem_display < 2);
+	mc = new CMenuOptionChooser(LOCALE_MISCSETTINGS_INFOBAR_CASYSTEM_FRAME, &g_settings.infobar_casystem_frame, OPTIONS_OFF0_ON1_OPTIONS, OPTIONS_OFF0_ON1_OPTION_COUNT, g_settings.infobar_casystem_display < 2);
 	mc->OnAfterChangeOption.connect(slot_ibar);
-	ca_frame->setHint("", LOCALE_MENU_HINT_INFOBAR_CASYS_FRAME);
-	menu_infobar->addItem(ca_frame);
+	mc->setHint("", LOCALE_MENU_HINT_INFOBAR_CASYS_FRAME);
+	menu_infobar->addItem(mc);
 
 	menu_infobar->addItem(GenericMenuSeparator);
 
@@ -1277,8 +1277,8 @@ bool COsdSetup::changeNotify(const neutrino_locale_t OptionName, void * data)
 		g_InfoViewer->changePB();
 		if (ARE_LOCALES_EQUAL(OptionName, LOCALE_MISCSETTINGS_INFOBAR_CASYSTEM_DISPLAY))
 		{
-			ca_dotmatrix->setActive(g_settings.casystem_display < 2);
-			ca_frame->setActive(g_settings.casystem_display < 2);
+			ca_dotmatrix->setActive(g_settings.infobar_casystem_display < 2);
+			ca_frame->setActive(g_settings.infobar_casystem_display < 2);
 			return true;
 		}
 		return false;
diff --git a/src/gui/widget/menue.cpp b/src/gui/widget/menue.cpp
index 19e06f6..de2ad6a 100644
--- a/src/gui/widget/menue.cpp
+++ b/src/gui/widget/menue.cpp
@@ -1547,7 +1547,7 @@ int CMenuOptionNumberChooser::exec(CMenuTarget*)
 
 	// give the observer a chance to modify the value
 	paint(true);
-
+	OnAfterChangeOption();
 	if (wantsRepaint)
 		res = menu_return::RETURN_REPAINT;
 
diff --git a/src/gui/widget/menue.h b/src/gui/widget/menue.h
index 02a6972..76267a6 100644
--- a/src/gui/widget/menue.h
+++ b/src/gui/widget/menue.h
@@ -294,7 +294,7 @@ class CAbstractMenuOptionChooser : public CMenuItem
 			optionValue = NULL;
 		}
 		~CAbstractMenuOptionChooser(){}
-		
+		sigc::signal<void> OnAfterChangeOption;
 };
 
 class CMenuOptionNumberChooser : public CAbstractMenuOptionChooser
@@ -430,7 +430,7 @@ class CMenuOptionChooser : public CAbstractMenuOptionChooser, public sigc::track
 		int getWidth(void);
 		void setOptions(const struct keyval * const Options, const unsigned Number_Of_Options);
 		void setOptions(const struct keyval_ext * const Options, const unsigned Number_Of_Options);
-		sigc::signal<void> OnAfterChangeOption;
+
 		int paint(bool selected);
 
 		int exec(CMenuTarget* parent);
diff --git a/src/neutrino.cpp b/src/neutrino.cpp
index 7a48d37..a607847 100644
--- a/src/neutrino.cpp
+++ b/src/neutrino.cpp
@@ -474,9 +474,9 @@ int CNeutrinoApp::loadSetup(const char * fname)
 	g_settings.infobar_show = configfile.getInt32("infobar_show", configfile.getInt32("infobar_cn", 1));
 	g_settings.infobar_show_channellogo   = configfile.getInt32("infobar_show_channellogo"  , 3 );
 	g_settings.infobar_progressbar   = configfile.getInt32("infobar_progressbar"  , 1 ); // below channel name
-	g_settings.casystem_display = configfile.getInt32("casystem_display", 1 );//discreet ca mode default
-	g_settings.casystem_dotmatrix = configfile.getInt32("casystem_dotmatrix", 1 );
-	g_settings.casystem_frame = configfile.getInt32("casystem_frame", 0 );
+	g_settings.infobar_casystem_display = configfile.getInt32("infobar_casystem_display", 1 );//discreet ca mode default
+	g_settings.infobar_casystem_dotmatrix = configfile.getInt32("infobar_casystem_dotmatrix", 0 );
+	g_settings.infobar_casystem_frame = configfile.getInt32("infobar_casystem_frame", 1 );
 	g_settings.scrambled_message = configfile.getBool("scrambled_message", true );
 	g_settings.volume_pos = configfile.getInt32("volume_pos", CVolumeBar::VOLUMEBAR_POS_TOP_RIGHT );
 	g_settings.volume_digits = configfile.getBool("volume_digits", true);
@@ -1013,9 +1013,9 @@ void CNeutrinoApp::saveSetup(const char * fname)
 	configfile.setInt32("infobar_show", g_settings.infobar_show);
 	configfile.setInt32("infobar_show_channellogo"  , g_settings.infobar_show_channellogo  );
 	configfile.setInt32("infobar_progressbar"  , g_settings.infobar_progressbar  );
-	configfile.setInt32("casystem_display"  , g_settings.casystem_display  );
-	configfile.setInt32("casystem_dotmatrix"  , g_settings.casystem_dotmatrix  );
-	configfile.setInt32("casystem_frame"  , g_settings.casystem_frame  );
+	configfile.setInt32("infobar_casystem_display"  , g_settings.infobar_casystem_display  );
+	configfile.setInt32("infobar_casystem_dotmatrix"  , g_settings.infobar_casystem_dotmatrix  );
+	configfile.setInt32("infobar_casystem_frame"  , g_settings.infobar_casystem_frame  );
 	configfile.setBool("scrambled_message"  , g_settings.scrambled_message  );
 	configfile.setInt32("volume_pos"  , g_settings.volume_pos  );
 	configfile.setBool("volume_digits", g_settings.volume_digits);
diff --git a/src/system/settings.h b/src/system/settings.h
index 49ca1fc..65dfcb1 100644
--- a/src/system/settings.h
+++ b/src/system/settings.h
@@ -179,9 +179,9 @@ struct SNeutrinoSettings
 	int progressbar_timescale_green;
 	int progressbar_timescale_yellow;
 	int progressbar_timescale_invert;
-	int casystem_display;
-	int casystem_dotmatrix;
-	int casystem_frame;
+	int infobar_casystem_display;
+	int infobar_casystem_dotmatrix;
+	int infobar_casystem_frame;
 	int scrambled_message;
 	int volume_pos;
 	int volume_digits;
