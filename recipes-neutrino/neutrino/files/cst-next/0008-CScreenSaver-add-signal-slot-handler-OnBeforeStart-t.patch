From 876d96cc35629ac038137234cd021404a04c4373 Mon Sep 17 00:00:00 2001
From: Thilo Graf <dbt@novatux.de>
Date: Wed, 18 Nov 2015 19:41:16 +0100
Subject: [PATCH 08/21] CScreenSaver: add signal/slot handler OnBeforeStart(),
 try to fix infoclock

In some constelations it is not required to enable infoclock after close
screensaver. So it is possible to cotrol this from other objects.
---
 src/gui/screensaver.cpp | 11 ++++++-----
 src/gui/screensaver.h   |  5 +++--
 2 files changed, 9 insertions(+), 7 deletions(-)

diff --git a/src/gui/screensaver.cpp b/src/gui/screensaver.cpp
index 7c10a6f..a3a3c8e 100644
--- a/src/gui/screensaver.cpp
+++ b/src/gui/screensaver.cpp
@@ -52,7 +52,6 @@ CScreenSaver::CScreenSaver()
 	m_viewer	= new CPictureViewer();
 	index 		= 0;
 	status_mute	= CAudioMute::getInstance()->getStatus();
-	status_clock	= InfoClock->getStatus();
 }
 
 CScreenSaver::~CScreenSaver()
@@ -77,12 +76,10 @@ CScreenSaver* CScreenSaver::getInstance()
 
 void CScreenSaver::Start()
 {
+	OnBeforeStart();
 	status_mute = CAudioMute::getInstance()->getStatus();
 	CAudioMute::getInstance()->enableMuteIcon(false);
 
-	status_clock = InfoClock->getStatus();
-	InfoClock->enableInfoClock(false);
-
 	m_viewer->SetScaling((CPictureViewer::ScalingMode)g_settings.picviewer_scaling);
 	m_viewer->SetVisible(g_settings.screen_StartX, g_settings.screen_EndX, g_settings.screen_StartY, g_settings.screen_EndY);
 
@@ -117,8 +114,12 @@ void CScreenSaver::Stop()
 	thrScreenSaver = 0;
 
 	m_frameBuffer->paintBackground(); //clear entire screen
-	InfoClock->enableInfoClock(status_clock);
+
 	CAudioMute::getInstance()->enableMuteIcon(status_mute);
+	if (!OnAfterStop.empty())
+		OnAfterStop();
+	else
+		InfoClock->enableInfoClock();
 }
 
 void* CScreenSaver::ScreenSaverPrg(void* arg)
diff --git a/src/gui/screensaver.h b/src/gui/screensaver.h
index 7f6984e..8be33d1 100644
--- a/src/gui/screensaver.h
+++ b/src/gui/screensaver.h
@@ -29,7 +29,7 @@
 #include <vector>
 #include <string>
 
-class CScreenSaver
+class CScreenSaver : public sigc::trackable
 {
 	private:
 		CFrameBuffer 	*m_frameBuffer;
@@ -40,7 +40,6 @@ class CScreenSaver
 		unsigned int 	index;
 
 		bool		status_mute;
-		bool		status_clock;
 
 		bool ReadDir();
 		void PaintPicture();
@@ -52,6 +51,8 @@ class CScreenSaver
 
 		void Start();
 		void Stop();
+		sigc::signal<void> OnBeforeStart;
+		sigc::signal<void> OnAfterStop;
 };
 
 #endif // __CSCREENSAVER_H__
-- 
2.1.4

